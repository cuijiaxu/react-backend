#============================================================================
# ORACLE
#============================================================================
﻿#使用的JDBC驱动的完整有效的java类名
#jdbc.oracle.driver=oracle.jdbc.driver.OracleDriver
# 传递给JDBC驱动的用于建立连接的URL
#jdbc.oracle.url=jdbc:oracle:thin:@219.141.179.222:59997:pwafcdb
#jdbc.oracle.url=jdbc:oracle:thin:@192.168.50.250:1521:pwafcdb
# 连接数据库的用户名和密码
#jdbc.oracle.username=signalcenter
#jdbc.oracle.password=signalcenter
#============================================================================
# PostgresSQL
#============================================================================
﻿# 使用的JDBC驱动的完整有效的java类名
#jdbc.postgres.driver=org.postgresql.Driver
# 传递给JDBC驱动的用于建立连接的URL
#jdbc.postgres.url=jdbc:postgresql://127.0.0.1:5432/heaven
# 连接数据库的用户名和密码
#jdbc.postgres.username=zhst
#jdbc.postgres.password=zhstgm
#============================================================================
# MySQL
#============================================================================
﻿# 使用的JDBC驱动的完整有效的java类名
﻿jdbc.mysql.driver=com.mysql.jdbc.Driver
# 传递给JDBC驱动的用于建立连接的URL
﻿jdbc.mysql.url=jdbc:mysql://192.168.50.100:3306/backend?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
# 连接数据库的用户名和密码
﻿jdbc.mysql.username=root
﻿jdbc.mysql.password=root123

#============================================================================
# MS SQL Server (JTDS)
#============================================================================
﻿# 使用的JDBC驱动的完整有效的java类名
#jdbc.sqlserver.driver=net.sourceforge.jtds.jdbc.Driver
# 传递给JDBC驱动的用于建立连接的URL
#jdbc.sqlserver.url=jdbc:jtds:sqlserver://192.168.1.245:1433/teleportring
# 连接数据库的用户名和密码
#jdbc.sqlserver.username=sa
#jdbc.sqlserver.password=Www12345678

#============================================================================
# MS SQL Server
#============================================================================
﻿# 使用的JDBC驱动的完整有效的java类名
#jdbc.sqlserver.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
# 传递给JDBC驱动的用于建立连接的URL
#jdbc.sqlserver.url=jdbc:sqlserver://127.0.0.1:1433;database=test;
# 连接数据库的用户名和密码
#jdbc.sqlserver.username=sa
#jdbc.sqlserver.password=sa

# 连接属性
#jdbc.connectionProperties=useUnicode=true;characterEncoding=utf8;zeroDateTimeBehavior=convertToNull
#==== jdbc end ================================================

#==== dbcp ====================================================
# 初始化连接:连接池启动时创建的初始化连接数量, default=0
dbcp.initialSize=3

# 最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为<=0表示不限制, default=8
dbcp.maxActive=50

# 最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,设置<=0表示不限制
dbcp.maxIdle=20

# 最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,如果设置为0则不创建
dbcp.minIdle=5 

# 默认FALSE 是否自动回收超时连接  可以为写法糟糕的没有关闭连接的程序修复数据库连接
dbcp.removeAbandoned=true

# 自动回收超时时间(以秒数为单位)，default=300
dbcp.removeAbandonedTimeout=100

# 设置在自动回收超时连接的时候打印连接的超时错误, default=false
dbcp.logAbandoned=true

# 等待超时以毫秒为单位，在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待。 -->
#dbcp.maxWait=30000

# 默认无限等待   超时等待时间以毫秒为单位   -1表示无限等待
dbcp.maxWait=200

# 开启池的prepared statement 缓冲池, default=false  
dbcp.poolPreparedStatements=false

# 默认为true 指定由连接池所创建的连接的自动提交（auto-commit）状态
dbcp.defaultAutoCommit=true
#==== dbcp end ================================================

#==== DataSource Global Setting ===============================
#配置初始化大小、最小、最大  
ds.initialSize=1  
ds.minIdle=1  
ds.maxActive=50  
  
#配置获取连接等待超时的时间   
ds.maxWait=30000  
  
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
ds.timeBetweenEvictionRunsMillis=10000  
  
#配置一个连接在池中最小生存的时间，单位是毫秒  
ds.minEvictableIdleTimeMillis=30000   
#==== DataSource Global Setting end ===========================
  
#==== other ===================================================
#连接池创建的连接的默认的read-only状态. 如果没有设置则setReadOnly方法将不会被调用. (某些驱动不支持只读模式,比如:Informix)
#如果没有设置该值，则"setReadOnly"方法将不被调用(某些驱动并不支持只读模式,如：Informix）
defaultReadOnly=

# 数据库隔离级别
# NONE  #http://jsczxy2.iteye.com/blog/1833864
# READ_COMMITTED   #只能读取到已经提交的数据。Oracle等多数数据库默认都是该级别
# READ_UNCOMMITTED #允许脏读，也就是可能读取到其他会话中未提交事务修改的数据
# REPEATABLE_READ  #可重复读。在同一个事务内的查询都是事务开始时刻一致的，InnoDB默认级别。在SQL标准中，该隔离级别消除了不可重复读，但是还存在幻象读
# SERIALIZABLE #完全串行化的读，每次读都需要获得表级共享锁，读写相互都会阻塞
defaultTransactionIsolation=READ_UNCOMMITTED
#连接池创建的连接的默认的catalog
#defaultCatalog=

poolPreparedStatements=false
#默认为不限制statement池能够同时分配的打开的statements的最大数量, 如果设置为0表示不限制
#maxOpenPreparedStatements=

